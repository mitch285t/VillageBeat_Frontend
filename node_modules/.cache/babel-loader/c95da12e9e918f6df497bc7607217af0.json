{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/TipModal.js\";\nimport React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nconst userbandsURL = \"http://localhost:3000/userbands\";\nconst BandShowURL = \"http://localhost:3000/bands/\";\nconst userURL = \"http://localhost:3000/users/\";\n\nclass TipModal extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      event.persist();\n      this.setState({\n        TipAmount: event.target.value\n      });\n    };\n\n    this.theuserfetch = () => {\n      let tip = parseInt(this.state.TipAmount);\n      let userwallet = parseInt(this.props.user.wallet);\n      let total = parseInt(userwallet - tip);\n      let body = this.state;\n      body.wallet = parseInt(total);\n      body.id = parseInt(this.props.user.id);\n      let configObj = {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\",\n          Authorization: \"Bearer \".concat(window.localStorage.getItem(\"token\"))\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"\".concat(userURL).concat(this.props.user.id), configObj).then(res => res.json()).then(json => {\n        this.setState({\n          modal: !this.state.modal\n        });\n        console.log(json);\n      });\n    };\n\n    this.modalToggle = event => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.fetchUserBands = () => {\n      fetch(userbandsURL, {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \".concat(window.localStorage.getItem(\"token\"))\n        }\n      }).then(res => res.json()).then(data => {\n        console.log(data.userbands);\n        this.setState({\n          userbands: data.userbands.band_id\n        });\n      });\n    };\n\n    this.checkUserbands = () => {\n      this.state.userbands.map(userband => {\n        if (this.props.band.id === userband) {\n          alert(\"you already follow this band!\");\n          window.location.reload(true);\n        } else console.log(\"go on through\");\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // this.checkUserbands();\n\n      this.fetchUserBands();\n      this.props.followFunction(event); // console.log(typeof this.state.TipAmount);\n      // console.log(this.props.userWallet);\n\n      console.log(\"hande submit has been called\");\n      this.theFetch();\n      this.modalToggle(\"string\"); // this.theuserfetch();\n    };\n\n    this.theFetch = () => {\n      if (parseInt(this.props.userWallet) >= parseInt(this.state.TipAmount)) {\n        let tip = parseInt(this.state.TipAmount);\n        let bandwallet = parseInt(this.props.band.wallet);\n        let total = parseInt(tip + bandwallet);\n        let body = this.state;\n        body.wallet = parseInt(total);\n        body.id = parseInt(this.props.band.id);\n        let configObj = {\n          method: \"PATCH\",\n          headers: {\n            \"content-type\": \"application/json\",\n            accept: \"application/json\",\n            Authorization: \"Bearer \".concat(window.localStorage.getItem(\"token\"))\n          },\n          body: JSON.stringify(body)\n        };\n        fetch(\"\".concat(BandShowURL).concat(this.props.band.id), configObj).then(res => res.json()).then(json => {\n          console.log(json);\n        });\n        this.theuserfetch();\n      } else {\n        alert(\"not enough cash\");\n      }\n    };\n\n    this.handleClose = event => {\n      console.log(event);\n      window.location.reload(true);\n    };\n\n    this.state = {\n      wallet: 0,\n      TipAmount: 0,\n      modal: true,\n      userwallet: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, console.log(this.state.TipAmount), React.createElement(Modal, {\n      show: this.state.modal,\n      animation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Be Groovy send some Cash \"), \" \", React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"integer\",\n      name: \"tip\",\n      onChange: event => this.handleChange(event),\n      value: this.state.tipAmount,\n      placeholder: \"tip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outline-dark\",\n      input: true,\n      type: \"submit\",\n      value: \"tip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Tip!/Follow!\"), React.createElement(Button, {\n      onClick: event => this.modalToggle(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Close\"))), \" \"));\n  }\n\n}\n\nexport default TipModal;","map":{"version":3,"sources":["/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/TipModal.js"],"names":["React","Modal","ModalHeader","ModalBody","ModalFooter","Form","Button","Alert","userbandsURL","BandShowURL","userURL","TipModal","Component","constructor","handleChange","event","persist","setState","TipAmount","target","value","theuserfetch","tip","parseInt","state","userwallet","props","user","wallet","total","body","id","configObj","method","headers","accept","Authorization","window","localStorage","getItem","JSON","stringify","fetch","then","res","json","modal","console","log","modalToggle","fetchUserBands","data","userbands","band_id","checkUserbands","map","userband","band","alert","location","reload","handleSubmit","preventDefault","followFunction","theFetch","userWallet","bandwallet","handleClose","render","tipAmount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nconst userbandsURL = \"http://localhost:3000/userbands\";\nconst BandShowURL = \"http://localhost:3000/bands/\";\nconst userURL = \"http://localhost:3000/users/\";\n\nclass TipModal extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      wallet: 0,\n      TipAmount: 0,\n      modal: true,\n      userwallet: 0\n    };\n  }\n\n  handleChange = event => {\n    event.persist();\n    this.setState({\n      TipAmount: event.target.value\n    });\n  };\n  theuserfetch = () => {\n    let tip = parseInt(this.state.TipAmount);\n    let userwallet = parseInt(this.props.user.wallet);\n    let total = parseInt(userwallet - tip);\n    let body = this.state;\n    body.wallet = parseInt(total);\n    body.id = parseInt(this.props.user.id);\n    let configObj = {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n        Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(`${userURL}${this.props.user.id}`, configObj)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          modal: !this.state.modal\n        });\n        console.log(json);\n      });\n  };\n  modalToggle = event => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  fetchUserBands = () => {\n    fetch(userbandsURL, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data.userbands);\n\n        this.setState({\n          userbands: data.userbands.band_id\n        });\n      });\n  };\n\n  checkUserbands = () => {\n    this.state.userbands.map(userband => {\n      if (this.props.band.id === userband) {\n        alert(\"you already follow this band!\");\n        window.location.reload(true);\n      } else console.log(\"go on through\");\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // this.checkUserbands();\n    this.fetchUserBands();\n    this.props.followFunction(event);\n    // console.log(typeof this.state.TipAmount);\n    // console.log(this.props.userWallet);\n    console.log(\"hande submit has been called\");\n    this.theFetch();\n    this.modalToggle(\"string\");\n    // this.theuserfetch();\n  };\n\n  theFetch = () => {\n    if (parseInt(this.props.userWallet) >= parseInt(this.state.TipAmount)) {\n      let tip = parseInt(this.state.TipAmount);\n      let bandwallet = parseInt(this.props.band.wallet);\n      let total = parseInt(tip + bandwallet);\n      let body = this.state;\n      body.wallet = parseInt(total);\n      body.id = parseInt(this.props.band.id);\n      let configObj = {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\",\n          Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(`${BandShowURL}${this.props.band.id}`, configObj)\n        .then(res => res.json())\n        .then(json => {\n          console.log(json);\n        });\n      this.theuserfetch();\n    } else {\n      alert(\"not enough cash\");\n    }\n  };\n  handleClose = event => {\n    console.log(event);\n    window.location.reload(true);\n  };\n\n  render() {\n    return (\n      <div>\n        {console.log(this.state.TipAmount)}\n        <Modal show={this.state.modal} animation={true}>\n          <ModalHeader>Be Groovy send some Cash </ModalHeader>{\" \"}\n          <ModalBody>\n            <Form onSubmit={event => this.handleSubmit(event)}>\n              <Form.Control\n                type=\"integer\"\n                name=\"tip\"\n                onChange={event => this.handleChange(event)}\n                value={this.state.tipAmount}\n                placeholder=\"tip\"\n              />\n              <Button variant=\"outline-dark\" input type=\"submit\" value=\"tip\">\n                Tip!/Follow!\n              </Button>\n              <Button onClick={event => this.modalToggle(event)}>Close</Button>\n            </Form>\n          </ModalBody>{\" \"}\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default TipModal;\n"]},"metadata":{},"sourceType":"module"}