{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/Testing.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport Card from \"react-bootstrap/Card\";\nconst showsURL = \"http://localhost:3000/shows\";\nlet array = [];\n\nclass Testing extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      shows: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(showsURL, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \".concat(window.localStorage.getItem(\"token\"))\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        shows: data.shows\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.bands.map(band => {\n      array.push(band.id);\n    }), this.state.shows.map(show => {\n      this.props.bands.map(band => {\n        console.log(band.id);\n\n        if (band.id === show.band_id) {\n          return React.createElement(Card, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, moment(show.time).format(\" hh:mm A, MMMM Do, YYYY \"))));\n        }\n      });\n    }));\n  }\n\n}\n\nexport default Testing;","map":{"version":3,"sources":["/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/Testing.js"],"names":["React","moment","Card","showsURL","array","Testing","Component","constructor","state","shows","componentDidMount","fetch","method","headers","Authorization","window","localStorage","getItem","then","res","json","data","setState","render","props","bands","map","band","push","id","show","console","log","band_id","time","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,MAAMC,QAAQ,GAAG,6BAAjB;AACA,IAAIC,KAAK,GAAG,EAAZ;;AACA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACR,QAAD,EAAW;AACdS,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAZ;AADN;AAFK,KAAX,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAOGF,IAPH,CAOQG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZb,QAAAA,KAAK,EAAEY,IAAI,CAACZ;AADA,OAAd;AAGD,KAXH;AAYD;;AAEDc,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AAC5BvB,MAAAA,KAAK,CAACwB,IAAN,CAAWD,IAAI,CAACE,EAAhB;AACD,KAFA,CADH,EAIG,KAAKrB,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAqBI,IAAI,IAAI;AAC5B,WAAKN,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AAC3BI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACE,EAAjB;;AACA,YAAIF,IAAI,CAACE,EAAL,KAAYC,IAAI,CAACG,OAArB,EAA8B;AAC5B,iBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGhC,MAAM,CAAC6B,IAAI,CAACI,IAAN,CAAN,CAAkBC,MAAlB,CAAyB,0BAAzB,CADH,CADF,CADF,CADF;AASD;AACF,OAbD;AAcD,KAfA,CAJH,CADF;AAuBD;;AA/CmC;;AAiDtC,eAAe9B,OAAf","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport Card from \"react-bootstrap/Card\";\nconst showsURL = \"http://localhost:3000/shows\";\nlet array = [];\nclass Testing extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      shows: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(showsURL, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          shows: data.shows\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.bands.map(band => {\n          array.push(band.id);\n        })}\n        {this.state.shows.map(show => {\n          this.props.bands.map(band => {\n            console.log(band.id);\n            if (band.id === show.band_id) {\n              return (\n                <Card>\n                  <Card.Body>\n                    <Card.Title>\n                      {moment(show.time).format(\" hh:mm A, MMMM Do, YYYY \")}\n                    </Card.Title>\n                  </Card.Body>\n                </Card>\n              );\n            }\n          });\n        })}\n      </div>\n    );\n  }\n}\nexport default Testing;\n"]},"metadata":{},"sourceType":"module"}