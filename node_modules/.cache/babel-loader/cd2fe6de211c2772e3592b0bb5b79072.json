{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/containers/MainPage.js\";\nimport React, { Component } from \"react\";\nimport Goggle from \"../components/Goggle.js\";\nimport CardDeck from \"react-bootstrap/CardGroup\";\nimport MainpageCard from \"../components/MainpageCard.js\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Testing from \"../components/Testing.js\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport date from \"date-and-time\";\nconst profileURL = \"http://localhost:3000/profile\";\nconst BandShowURL = \"http://localhost:3000/bands/\";\nlet arrays = [];\n\nclass MainPage extends Component {\n  constructor() {\n    super();\n\n    this.handleLink = (event, lat, lng, location) => {\n      this.setState({\n        Clicked: !this.state.Clicked,\n        lat: lat,\n        lng: lng,\n        location: location\n      });\n      console.log(this.state.lat);\n      console.log(this.state.lng);\n    };\n\n    this.getshowtimes = times => {\n      arrays.push(times);\n      let parsed = [];\n      let num = [];\n      let merged = [].concat.apply([], arrays);\n      merged.map(merge => {\n        parsed.push(moment(merge.time).format(\" hh:mm A, MMMM Do, YYYY \"));\n      });\n      console.log(merged);\n      parsed.map(ha => {\n        num.push(moment(ha.time, \"hh:mm A, MMMM Do, YYYY\"));\n      });\n      console.log(num);\n    };\n\n    this.state = {\n      user: [],\n      bands: [],\n      Clicked: false,\n      lat: 0,\n      lng: 0,\n      location: \"\",\n      shows: [],\n      venues: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(profileURL, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \".concat(window.localStorage.getItem(\"token\"))\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        user: data.user,\n        bands: data.bands\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.Clicked === true ? React.createElement(Goggle, {\n      lat: this.state.lat,\n      lng: this.state.lng,\n      location: this.state.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }) : console.log(\"what up nerd\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Welcome back, \", window.localStorage.getItem(\"name\"), \"!\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(CardDeck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.bands.map(band => {\n      {}\n      return React.createElement(MainpageCard, {\n        band: band.id,\n        handleLink: this.handleLink,\n        time: this.getshowtimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/containers/MainPage.js"],"names":["React","Component","Goggle","CardDeck","MainpageCard","Container","Row","Col","Testing","moment","_","date","profileURL","BandShowURL","arrays","MainPage","constructor","handleLink","event","lat","lng","location","setState","Clicked","state","console","log","getshowtimes","times","push","parsed","num","merged","concat","apply","map","merge","time","format","ha","user","bands","shows","venues","componentDidMount","fetch","method","headers","Authorization","window","localStorage","getItem","then","res","json","data","render","band","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Goggle from \"../components/Goggle.js\";\nimport CardDeck from \"react-bootstrap/CardGroup\";\nimport MainpageCard from \"../components/MainpageCard.js\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Testing from \"../components/Testing.js\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport date from \"date-and-time\";\nconst profileURL = \"http://localhost:3000/profile\";\nconst BandShowURL = \"http://localhost:3000/bands/\";\nlet arrays = [];\nclass MainPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: [],\n      bands: [],\n      Clicked: false,\n      lat: 0,\n      lng: 0,\n      location: \"\",\n      shows: [],\n      venues: []\n    };\n  }\n  componentDidMount() {\n    fetch(profileURL, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          user: data.user,\n          bands: data.bands\n        });\n      });\n  }\n  handleLink = (event, lat, lng, location) => {\n    this.setState({\n      Clicked: !this.state.Clicked,\n      lat: lat,\n      lng: lng,\n      location: location\n    });\n    console.log(this.state.lat);\n    console.log(this.state.lng);\n  };\n\n  getshowtimes = times => {\n    arrays.push(times);\n    let parsed = [];\n    let num = [];\n    let merged = [].concat.apply([], arrays);\n    merged.map(merge => {\n      parsed.push(moment(merge.time).format(\" hh:mm A, MMMM Do, YYYY \"));\n    });\n    console.log(merged);\n    parsed.map(ha => {\n      num.push(moment(ha.time, \"hh:mm A, MMMM Do, YYYY\"));\n    });\n    console.log(num);\n  };\n  render() {\n    return (\n      <div>\n        {this.state.Clicked === true ? (\n          <Goggle\n            lat={this.state.lat}\n            lng={this.state.lng}\n            location={this.state.location}\n          />\n        ) : (\n          console.log(\"what up nerd\")\n        )}\n        <br></br>\n        <br></br>\n        <div>\n          <h1>Welcome back, {window.localStorage.getItem(\"name\")}!</h1>\n\n          <div>\n            <CardDeck>\n              {this.state.bands.map(band => {\n                {\n                }\n                return (\n                  <MainpageCard\n                    band={band.id}\n                    handleLink={this.handleLink}\n                    time={this.getshowtimes}\n                  />\n                );\n              })}\n            </CardDeck>\n          </div>\n        </div>\n        {/* <Testing /> */}\n      </div>\n    );\n  }\n}\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}