{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/bandInfo.js\";\nimport React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nconst bandURL = \"http://localhost:3000/bands/\";\n\nconst country = require(\"../country.jpg\");\n\nconst blues = require(\"../blues.jpg\");\n\nconst classical = require(\"../classical.jpg\");\n\nconst electronic = require(\"../electronic.jpeg\");\n\nconst hiphop = require(\"../hiphop.jpeg\");\n\nconst latin = require(\"../latin.jpg\");\n\nconst reggae = require(\"../reggae.jpg\");\n\nconst rock = require(\"../rock.jpg\");\n\nconst soul = require(\"../soul.jpg\");\n\nconst world = require(\"../world.jpg\");\n\nconst stageandscreen = require(\"../music.jpg\");\n\nconst music = require(\"../music.jpg\");\n\nconst genresarray = {\n  country: require(\"../country.jpg\"),\n  folk: require(\"../blues.jpg\"),\n  classical: require(\"../classical.jpg\"),\n  pop: require(\"../electronic.jpeg\"),\n  rap: require(\"../hiphop.jpeg\"),\n  hiphop: require(\"../hiphop.jpeg\"),\n  funk: require(\"../latin.jpg\"),\n  reggae: require(\"../reggae.jpg\"),\n  rock: require(\"../rock.jpg\"),\n  soul: require(\"../soul.jpg\"),\n  world: require(\"../world.jpg\"),\n  stageandscreen: require(\"../music.jpg\"),\n  music: require(\"../music.jpg\")\n};\n\nclass BandInfo extends React.Component {\n  constructor() {\n    super();\n\n    this.genrearrayEmpty = name => {\n      if (this.state.genres.length > 0) {\n        let cardgenre = this.state.genres[0].name.replace(/\\s/g, \"\").toLowerCase();\n        return genresarray[cardgenre];\n      } else {\n        return genresarray.music;\n      }\n    };\n\n    this.state = {\n      bandName: \"\",\n      genres: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"\".concat(bandURL).concat(this.props.band.id), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \".concat(window.localStorage.getItem(\"token\"))\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        bandName: data.band.name,\n        genres: data.genres\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: this.props.band.id,\n      onClick: event => this.props.handleClick(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: this.props.band.id,\n      style: {\n        width: \"10rem\",\n        height: \"5rem\"\n      } // background-color=\" rgb(0, 0, 0, 0.1)\"\n      ,\n      className: \"card-footer\",\n      border: \"dark\",\n      text: \"white\",\n      key: this.props.band.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      id: this.props.band.id,\n      variant: \"top\",\n      className: \"card-img-top\",\n      src: \"\".concat(this.genrearrayEmpty()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Card.Body, {\n      id: this.props.band.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      id: this.props.band.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.props.band.name))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BandInfo;","map":{"version":3,"sources":["/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/bandInfo.js"],"names":["React","Card","bandURL","country","require","blues","classical","electronic","hiphop","latin","reggae","rock","soul","world","stageandscreen","music","genresarray","folk","pop","rap","funk","BandInfo","Component","constructor","genrearrayEmpty","name","state","genres","length","cardgenre","replace","toLowerCase","bandName","componentDidMount","fetch","props","band","id","method","headers","Authorization","window","localStorage","getItem","then","res","json","data","setState","render","event","handleClick","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nconst bandURL = \"http://localhost:3000/bands/\";\nconst country = require(\"../country.jpg\");\nconst blues = require(\"../blues.jpg\");\nconst classical = require(\"../classical.jpg\");\nconst electronic = require(\"../electronic.jpeg\");\nconst hiphop = require(\"../hiphop.jpeg\");\nconst latin = require(\"../latin.jpg\");\nconst reggae = require(\"../reggae.jpg\");\nconst rock = require(\"../rock.jpg\");\nconst soul = require(\"../soul.jpg\");\nconst world = require(\"../world.jpg\");\nconst stageandscreen = require(\"../music.jpg\");\nconst music = require(\"../music.jpg\");\nconst genresarray = {\n  country: require(\"../country.jpg\"),\n  folk: require(\"../blues.jpg\"),\n  classical: require(\"../classical.jpg\"),\n  pop: require(\"../electronic.jpeg\"),\n  rap: require(\"../hiphop.jpeg\"),\n  hiphop: require(\"../hiphop.jpeg\"),\n  funk: require(\"../latin.jpg\"),\n  reggae: require(\"../reggae.jpg\"),\n  rock: require(\"../rock.jpg\"),\n  soul: require(\"../soul.jpg\"),\n  world: require(\"../world.jpg\"),\n  stageandscreen: require(\"../music.jpg\"),\n  music: require(\"../music.jpg\")\n};\n\nclass BandInfo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      bandName: \"\",\n      genres: \"\"\n    };\n  }\n  componentDidMount() {\n    fetch(`${bandURL}${this.props.band.id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          bandName: data.band.name,\n          genres: data.genres\n        });\n      });\n  }\n  genrearrayEmpty = name => {\n    if (this.state.genres.length > 0) {\n      let cardgenre = this.state.genres[0].name\n        .replace(/\\s/g, \"\")\n        .toLowerCase();\n      return genresarray[cardgenre];\n    } else {\n      return genresarray.music;\n    }\n  };\n\n  render() {\n    return (\n      <div\n        id={this.props.band.id}\n        onClick={event => this.props.handleClick(event)}\n      >\n        <Card\n          id={this.props.band.id}\n          style={{ width: \"10rem\", height: \"5rem\" }}\n          // background-color=\" rgb(0, 0, 0, 0.1)\"\n          className=\"card-footer\"\n          border=\"dark\"\n          text=\"white\"\n          key={this.props.band.id}\n        >\n          <Card.Img\n            id={this.props.band.id}\n            variant=\"top\"\n            className=\"card-img-top\"\n            src={`${this.genrearrayEmpty()}`}\n          />\n          <Card.Body id={this.props.band.id}>\n            <Card.Text id={this.props.band.id}>\n              {this.props.band.name}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <br></br>\n      </div>\n    );\n  }\n}\nexport default BandInfo;\n"]},"metadata":{},"sourceType":"module"}