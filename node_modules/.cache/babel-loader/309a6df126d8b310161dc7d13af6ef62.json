{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar prefixed = require('prefixed');\n/**\n * Expose `fade`.\n */\n\n\nmodule.exports = fade;\n/**\n * Fade `el` to `opacity` in `duration` seconds.\n *\n * @param {Element} el\n * @param {Number} opacity\n * @param {Number=} duration\n * @param {Function=} callback\n *\n * @todo Add other vendor prefixes\n * @todo Properly clear transition\n */\n\nfunction fade(el, opacity, duration, callback) {\n  if (typeof duration === 'undefined') duration = 1000;else if (typeof duration === 'function') {\n    callback = duration;\n    duration = 1000;\n  }\n  var oldTransition = prefixed.get(el.style, 'transition') || '';\n  prefixed(el.style, 'transition', 'opacity ' + duration / 1000 + 's');\n  el.style.opacity = opacity;\n  setTimeout(function () {\n    prefixed(el.style, 'transition', oldTransition);\n    if (callback) callback();\n  }, duration);\n}\n/**\n * Fade in `el`.\n *\n * @param {Element} el\n * @param {Number=} duration\n * @param {Function=} callback\n */\n\n\nfade.out = function (el, duration, callback) {\n  fade(el, 0, duration, callback);\n};\n/**\n * Fade out `el`.\n *\n * @param {Element} el\n * @param {Number=} duration\n * @param {Function=} callback\n */\n\n\nfade['in'] = function (el, duration, callback) {\n  fade(el, 1, duration, callback);\n};","map":null,"metadata":{},"sourceType":"script"}