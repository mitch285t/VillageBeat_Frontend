{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/Goggle.js\";\nimport React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker.js\";\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, text);\n\nconst handleApiLoaded = (map, maps) => {};\n\nclass Goggle extends Component {\n  render() {\n    return (// Important! Always set the container height explicitly\n      React.createElement(\"div\", {\n        style: {\n          height: \"50vh\",\n          width: \"50%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: process.env.REACT_APP_GOOGLE_KEY\n        },\n        defaultCenter: center,\n        defaultZoom: zoom,\n        yesIWantToUseGoogleMapApiInternals: true,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => handleApiLoaded(map, maps),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        lat: this.props.lat,\n        lng: \"-\".concat(this.props.lng),\n        text: \"My Marker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nGoggle.defaultProps = {\n  center: {\n    lat: \"\".concat(Goggle.lat),\n    lng: \"-\".concat(Goggle.lng)\n  },\n  zoom: 15\n};\nexport default Goggle;","map":{"version":3,"sources":["/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/Goggle.js"],"names":["React","Component","GoogleMapReact","Marker","AnyReactComponent","text","handleApiLoaded","map","maps","Goggle","render","height","width","key","process","env","REACT_APP_GOOGLE_KEY","center","zoom","props","lat","lng","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,IAAN,CAAxC;;AACA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe,CAAE,CAAzC;;AACA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAS7BS,EAAAA,MAAM,GAAG;AACP,WACE;AACA;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,gBAAgB,EAAE;AAChBC,UAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADD,SADpB;AAIE,QAAA,aAAa,EAAEC,MAJjB;AAKE,QAAA,WAAW,EAAEC,IALf;AAME,QAAA,kCAAkC,MANpC;AAOE,QAAA,iBAAiB,EAAE,CAAC;AAAEX,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAD,KAAmBF,eAAe,CAACC,GAAD,EAAMC,IAAN,CAPvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAE,KAAKW,KAAL,CAAWC,GADlB;AAEE,QAAA,GAAG,aAAM,KAAKD,KAAL,CAAWE,GAAjB,CAFL;AAGE,QAAA,IAAI,EAAC,WAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAFF;AAoBD;;AA9B4B;;AAAzBZ,M,CACGa,Y,GAAe;AACpBL,EAAAA,MAAM,EAAE;AACNG,IAAAA,GAAG,YAHHX,MAGQ,CAAKW,GAAV,CADG;AAENC,IAAAA,GAAG,aAJHZ,MAIS,CAAKY,GAAX;AAFG,GADY;AAKpBH,EAAAA,IAAI,EAAE;AALc,C;AAgCxB,eAAeT,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker.js\";\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\nconst handleApiLoaded = (map, maps) => {};\nclass Goggle extends Component {\n  static defaultProps = {\n    center: {\n      lat: `${this.lat}`,\n      lng: `-${this.lng}`\n    },\n    zoom: 15\n  };\n\n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: \"50vh\", width: \"50%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: process.env.REACT_APP_GOOGLE_KEY\n          }}\n          defaultCenter={center}\n          defaultZoom={zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n        >\n          <Marker\n            lat={this.props.lat}\n            lng={`-${this.props.lng}`}\n            text=\"My Marker\"\n          />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default Goggle;\n"]},"metadata":{},"sourceType":"module"}