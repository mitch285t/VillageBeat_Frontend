{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/MainpageCard.js\";\nimport React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardGroup\";\nimport moment from \"moment\";\nconst BandShowURL = \"http://localhost:3000/bands/\";\n\nclass MainpageCard extends React.Component {\n  constructor() {\n    super();\n\n    this.showund = () => {\n      if (this.state.showdet.length !== 0) {\n        console.log(this.state.showdet.time);\n      }\n    };\n\n    this.state = {\n      details: [],\n      banddet: [],\n      venuedet: [],\n      showdet: [],\n      genredet: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"\".concat(BandShowURL).concat(this.props.band), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \".concat(window.localStorage.getItem(\"token\"))\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        details: data,\n        banddet: data.band,\n        showdet: data.shows,\n        venuedet: data.venues,\n        genredet: data.genres\n      });\n    });\n  }\n\n  render() {\n    this.showund();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.banddet.name), React.createElement(Card.Subtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.genredet.map(genre => {\n      return genre.name;\n    })), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.venuedet.map(venue => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, venue.name, \" | \", venue.location, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), this.state.showdet.map(show => {\n        if (show.venue_id === venue.id) return moment(show.time).format(\" hh:mm A, MMMM Do, YYYY \");\n      }));\n    }))), React.createElement(Card.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"bandprofile page\"))));\n  }\n\n}\n\nexport default MainpageCard;","map":{"version":3,"sources":["/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/MainpageCard.js"],"names":["React","Card","CardDeck","moment","BandShowURL","MainpageCard","Component","constructor","showund","state","showdet","length","console","log","time","details","banddet","venuedet","genredet","componentDidMount","fetch","props","band","method","headers","Authorization","window","localStorage","getItem","then","res","json","data","setState","shows","venues","genres","render","name","map","genre","venue","location","show","venue_id","id","format"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardGroup\";\nimport moment from \"moment\";\n\nconst BandShowURL = \"http://localhost:3000/bands/\";\n\nclass MainpageCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      details: [],\n      banddet: [],\n      venuedet: [],\n      showdet: [],\n      genredet: []\n    };\n  }\n  componentDidMount() {\n    fetch(`${BandShowURL}${this.props.band}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          details: data,\n          banddet: data.band,\n          showdet: data.shows,\n          venuedet: data.venues,\n          genredet: data.genres\n        });\n      });\n  }\n  showund = () => {\n    if (this.state.showdet.length !== 0) {\n      console.log(this.state.showdet.time);\n    }\n  };\n\n  render() {\n    this.showund();\n    return (\n      <div>\n        <Card>\n          <Card.Body>\n            <Card.Title>{this.state.banddet.name}</Card.Title>\n            <Card.Subtitle>\n              {this.state.genredet.map(genre => {\n                return genre.name;\n              })}\n            </Card.Subtitle>\n            <Card.Text>\n              <ul>\n                {this.state.venuedet.map(venue => {\n                  return (\n                    <li>\n                      {venue.name} | {venue.location}\n                      <br></br>\n                      {this.state.showdet.map(show => {\n                        if (show.venue_id === venue.id)\n                          return moment(show.time).format(\n                            \" hh:mm A, MMMM Do, YYYY \"\n                          );\n                      })}\n                    </li>\n                  );\n                })}\n              </ul>\n            </Card.Text>\n            <Card.Footer>bandprofile page</Card.Footer>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default MainpageCard;\n"]},"metadata":{},"sourceType":"module"}