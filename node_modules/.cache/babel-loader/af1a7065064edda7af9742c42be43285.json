{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/VenuesList.js\";\nimport React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nconst VenuesURL = \"http://localhost:3000/venues\";\nlet array = [];\n\nclass VenuesList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      venues: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(VenuesURL, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \".concat(window.localStorage.getItem(\"token\"))\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        venues: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.venues.map(venue => {\n      if (venue.id === this.props.show.venue_id) {\n        return React.createElement(Card.Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \" \", \"\".concat(venue.name, \" / \").concat(venue.location), React.createElement(Button, {\n          variant: \"outline-dark\",\n          id: venue.id,\n          onClick: event => this.handleLink(event, venue.lat, venue.lng, venue.location),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      }\n    }));\n  }\n\n}\n\nexport default VenuesList;","map":{"version":3,"sources":["/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/VenuesList.js"],"names":["React","Card","Button","VenuesURL","array","VenuesList","Component","constructor","state","venues","componentDidMount","fetch","method","headers","Authorization","window","localStorage","getItem","then","res","json","data","setState","render","map","venue","id","props","show","venue_id","name","location","event","handleLink","lat","lng"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,MAAMC,SAAS,GAAG,8BAAlB;AACA,IAAIC,KAAK,GAAG,EAAZ;;AACA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACR,SAAD,EAAY;AACfS,MAAAA,MAAM,EAAE,KADO;AAEfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAZ;AADN;AAFM,KAAZ,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAOGF,IAPH,CAOQG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZb,QAAAA,MAAM,EAAEY;AADI,OAAd;AAGD,KAXH;AAYD;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,GAAlB,CAAsBC,KAAK,IAAI;AAC9B,UAAIA,KAAK,CAACC,EAAN,KAAa,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,QAAjC,EAA2C;AACzC,eACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,YAEMJ,KAAK,CAACK,IAFZ,gBAEsBL,KAAK,CAACM,QAF5B,GAGE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,cADV;AAEE,UAAA,EAAE,EAAEN,KAAK,CAACC,EAFZ;AAGE,UAAA,OAAO,EAAEM,KAAK,IACZ,KAAKC,UAAL,CAAgBD,KAAhB,EAAuBP,KAAK,CAACS,GAA7B,EAAkCT,KAAK,CAACU,GAAxC,EAA6CV,KAAK,CAACM,QAAnD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADF;AAaD;AACF,KAhBA,CADH,CADF;AAqBD;;AA3CsC;;AA8CzC,eAAe1B,UAAf","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nconst VenuesURL = \"http://localhost:3000/venues\";\nlet array = [];\nclass VenuesList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      venues: []\n    };\n  }\n  componentDidMount() {\n    fetch(VenuesURL, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          venues: data\n        });\n      });\n  }\n  render() {\n    return (\n      <div>\n        {this.state.venues.map(venue => {\n          if (venue.id === this.props.show.venue_id) {\n            return (\n              <Card.Footer>\n                {\" \"}\n                {`${venue.name} / ${venue.location}`}\n                <Button\n                  variant=\"outline-dark\"\n                  id={venue.id}\n                  onClick={event =>\n                    this.handleLink(event, venue.lat, venue.lng, venue.location)\n                  }\n                ></Button>\n              </Card.Footer>\n            );\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nexport default VenuesList;\n"]},"metadata":{},"sourceType":"module"}