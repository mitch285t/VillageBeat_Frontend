{"ast":null,"code":"import _slicedToArray from \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/Goggle.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as parkData from \"./data/skateboard-parks.json\";\nimport mapStyles from \"./mapStyles\";\n\nfunction Map() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedPark = _useState2[0],\n        setSelectedPark = _useState2[1];\n\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return React.createElement(GoogleMap, {\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 45.4211,\n      lng: -75.6903\n    },\n    defaultOptions: {\n      styles: mapStyles\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, parkData.features.map(park => React.createElement(Marker, {\n    key: park.properties.PARK_ID,\n    position: {\n      lat: park.geometry.coordinates[1],\n      lng: park.geometry.coordinates[0]\n    },\n    onClick: () => {\n      setSelectedPark(park);\n    },\n    icon: {\n      url: \"/skateboarding.svg\",\n      scaledSize: new window.google.maps.Size(25, 25)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), selectedPark && React.createElement(InfoWindow, {\n    onCloseClick: () => {\n      setSelectedPark(null);\n    },\n    position: {\n      lat: selectedPark.geometry.coordinates[1],\n      lng: selectedPark.geometry.coordinates[0]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, selectedPark.properties.NAME), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, selectedPark.properties.DESCRIPTIO))));\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\nexport default function App() {\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(MapWrapped, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=\".concat(process.env.REACT_APP_GOOGLE_KEY),\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/Goggle.js"],"names":["React","useState","useEffect","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","parkData","mapStyles","Map","selectedPark","setSelectedPark","listener","e","key","window","addEventListener","removeEventListener","lat","lng","styles","features","map","park","properties","PARK_ID","geometry","coordinates","url","scaledSize","google","maps","Size","NAME","DESCRIPTIO","MapWrapped","App","width","height","process","env","REACT_APP_GOOGLE_KEY"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport * as parkData from \"./data/skateboard-parks.json\";\nimport mapStyles from \"./mapStyles\";\n\nfunction Map() {\n  const [selectedPark, setSelectedPark] = useState(null);\n\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(null);\n      }\n    };\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <GoogleMap\n      defaultZoom={10}\n      defaultCenter={{ lat: 45.4211, lng: -75.6903 }}\n      defaultOptions={{ styles: mapStyles }}\n    >\n      {parkData.features.map(park => (\n        <Marker\n          key={park.properties.PARK_ID}\n          position={{\n            lat: park.geometry.coordinates[1],\n            lng: park.geometry.coordinates[0]\n          }}\n          onClick={() => {\n            setSelectedPark(park);\n          }}\n          icon={{\n            url: `/skateboarding.svg`,\n            scaledSize: new window.google.maps.Size(25, 25)\n          }}\n        />\n      ))}\n\n      {selectedPark && (\n        <InfoWindow\n          onCloseClick={() => {\n            setSelectedPark(null);\n          }}\n          position={{\n            lat: selectedPark.geometry.coordinates[1],\n            lng: selectedPark.geometry.coordinates[0]\n          }}\n        >\n          <div>\n            <h2>{selectedPark.properties.NAME}</h2>\n            <p>{selectedPark.properties.DESCRIPTIO}</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\n\nexport default function App() {\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <MapWrapped\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}