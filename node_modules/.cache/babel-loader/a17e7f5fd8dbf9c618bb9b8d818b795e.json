{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/TipModal.js\";\nimport React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nconst BandShowURL = \"http://localhost:3000/bands/\";\n\nclass TipModal extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      event.persist();\n      this.setState({\n        TipAmount: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // console.log(typeof this.state.TipAmount);\n      // console.log(this.props.userWallet);\n\n      this.theFetch();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.theFetch = () => {\n      if (this.props.userWallet >= this.state.TipAmount) {\n        let tip = parseInt(this.state.TipAmount);\n        let bandwallet = parseInt(this.props.band.wallet);\n        let total = parseInt(tip + bandwallet);\n        let body = this.state;\n        body.wallet = parseInt(total);\n        body.id = parseInt(this.props.band.id);\n        let configObj = {\n          method: \"PATCH\",\n          headers: {\n            \"content-type\": \"application/json\",\n            accept: \"application/json\",\n            Authorization: \"Bearer \".concat(window.localStorage.getItem(\"token\"))\n          },\n          body: JSON.stringify(body)\n        };\n        fetch(\"\".concat(BandShowURL).concat(this.props.band.id), configObj).then(res => res.json()).then(json => {\n          console.log(json);\n        });\n      }\n    };\n\n    this.state = {\n      wallet: 0,\n      TipAmount: 0,\n      modal: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, console.log(this.state.TipAmount), React.createElement(Modal, {\n      show: this.state.modal,\n      animation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Be Groovy send some Cash \"), React.createElement(Form.Group, {\n      onSubmit: event => {\n        this.handleSubmit(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"integer\",\n      name: \"tip\",\n      onChange: event => this.handleChange(event),\n      value: this.state.tipAmount,\n      placeholder: \"tip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outline-dark\",\n      input: true,\n      type: \"submit\",\n      value: \"tip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Tip!\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Close\"))), \" \")));\n  }\n\n}\n\nexport default TipModal;","map":{"version":3,"sources":["/Users/mitchellwilliams/flatironSschool/Final_Project/Frontend/groupie-frontend/src/components/TipModal.js"],"names":["React","Modal","ModalHeader","ModalBody","ModalFooter","Form","Button","BandShowURL","TipModal","Component","constructor","handleChange","event","persist","setState","TipAmount","target","value","handleSubmit","preventDefault","theFetch","modal","state","props","userWallet","tip","parseInt","bandwallet","band","wallet","total","body","id","configObj","method","headers","accept","Authorization","window","localStorage","getItem","JSON","stringify","fetch","then","res","json","console","log","render","tipAmount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nconst BandShowURL = \"http://localhost:3000/bands/\";\nclass TipModal extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      wallet: 0,\n      TipAmount: 0,\n      modal: true\n    };\n  }\n\n  handleChange = event => {\n    event.persist();\n    this.setState({\n      TipAmount: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // console.log(typeof this.state.TipAmount);\n    // console.log(this.props.userWallet);\n    this.theFetch();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  theFetch = () => {\n    if (this.props.userWallet >= this.state.TipAmount) {\n      let tip = parseInt(this.state.TipAmount);\n      let bandwallet = parseInt(this.props.band.wallet);\n      let total = parseInt(tip + bandwallet);\n      let body = this.state;\n      body.wallet = parseInt(total);\n      body.id = parseInt(this.props.band.id);\n      let configObj = {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accept: \"application/json\",\n          Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(`${BandShowURL}${this.props.band.id}`, configObj)\n        .then(res => res.json())\n        .then(json => {\n          console.log(json);\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {console.log(this.state.TipAmount)}\n        <Modal show={this.state.modal} animation={true}>\n          <ModalHeader>Be Groovy send some Cash </ModalHeader>\n          <Form.Group\n            onSubmit={event => {\n              this.handleSubmit(event);\n            }}\n          >\n            {\" \"}\n            <ModalBody>\n              <Form onSubmit={event => this.handleSubmit(event)}>\n                <Form.Control\n                  type=\"integer\"\n                  name=\"tip\"\n                  onChange={event => this.handleChange(event)}\n                  value={this.state.tipAmount}\n                  placeholder=\"tip\"\n                />\n                <Button variant=\"outline-dark\" input type=\"submit\" value=\"tip\">\n                  Tip!\n                </Button>\n                <Button>Close</Button>\n              </Form>\n            </ModalBody>{\" \"}\n          </Form.Group>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default TipModal;\n"]},"metadata":{},"sourceType":"module"}